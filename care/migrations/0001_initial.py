# Generated by Django 4.2.7 on 2025-08-13 15:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=200, unique=True, verbose_name="Slug"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "short_description",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Description courte"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("massage", "Massage"),
                            ("physiotherapie", "Physiothérapie"),
                            ("osteopathie", "Ostéopathie"),
                            ("nutrition", "Nutrition"),
                            ("bien_etre", "Bien-être"),
                            ("yoga", "Yoga"),
                            ("meditation", "Méditation"),
                            ("reiki", "Reiki"),
                            ("autre", "Autre"),
                        ],
                        default="bien_etre",
                        max_length=20,
                        verbose_name="Catégorie",
                    ),
                ),
                (
                    "practitioner_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Nom du pratiquant"
                    ),
                ),
                (
                    "practitioner_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email du pratiquant"
                    ),
                ),
                (
                    "practitioner_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="Téléphone du pratiquant",
                    ),
                ),
                (
                    "qualifications",
                    models.TextField(blank=True, verbose_name="Qualifications"),
                ),
                ("location", models.CharField(max_length=200, verbose_name="Lieu")),
                (
                    "address",
                    models.TextField(blank=True, verbose_name="Adresse complète"),
                ),
                ("city", models.CharField(max_length=100, verbose_name="Ville")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Code postal"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="France", max_length=100, verbose_name="Pays"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=8, verbose_name="Prix"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Devise"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        default=60,
                        validators=[
                            django.core.validators.MinValueValidator(15),
                            django.core.validators.MaxValueValidator(480),
                        ],
                        verbose_name="Durée en minutes",
                    ),
                ),
                ("is_free", models.BooleanField(default=False, verbose_name="Gratuit")),
                (
                    "is_available",
                    models.BooleanField(default=True, verbose_name="Disponible"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Mis en avant"),
                ),
                (
                    "schedule",
                    models.JSONField(blank=True, default=dict, verbose_name="Horaires"),
                ),
                (
                    "booking_required",
                    models.BooleanField(
                        default=True, verbose_name="Réservation requise"
                    ),
                ),
                (
                    "main_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="care/images/",
                        verbose_name="Image principale",
                    ),
                ),
                (
                    "gallery",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Galerie d'images"
                    ),
                ),
                (
                    "video_url",
                    models.URLField(blank=True, verbose_name="URL de la vidéo"),
                ),
                (
                    "benefits",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Avantages"
                    ),
                ),
                (
                    "contraindications",
                    models.TextField(blank=True, verbose_name="Contre-indications"),
                ),
                (
                    "materials_needed",
                    models.TextField(blank=True, verbose_name="Matériel nécessaire"),
                ),
                (
                    "preparation_required",
                    models.TextField(blank=True, verbose_name="Préparation requise"),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, verbose_name="Tags"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "practitioner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="care_services",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Pratiquant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service de soins",
                "verbose_name_plural": "Services de soins",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["category", "is_available"],
                        name="care_servic_categor_7ead82_idx",
                    ),
                    models.Index(
                        fields=["practitioner", "is_available"],
                        name="care_servic_practit_1f1815_idx",
                    ),
                    models.Index(
                        fields=["city", "is_available"],
                        name="care_servic_city_f8f21b_idx",
                    ),
                ],
            },
        ),
    ]
