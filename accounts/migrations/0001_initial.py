# Generated by Django 4.2.7 on 2025-08-13 10:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("admin", "Administrateur"),
                            ("artist", "Artiste"),
                            ("participant", "Participant"),
                        ],
                        default="participant",
                        max_length=20,
                        verbose_name="Type d'utilisateur",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Téléphone"
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pics/",
                        verbose_name="Photo de profil",
                    ),
                ),
                (
                    "dance_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Débutant"),
                            ("intermediate", "Intermédiaire"),
                            ("advanced", "Avancé"),
                            ("professional", "Professionnel"),
                        ],
                        default="beginner",
                        max_length=20,
                        verbose_name="Niveau de danse",
                    ),
                ),
                (
                    "dance_styles",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Styles de danse"
                    ),
                ),
                (
                    "experience_years",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Années d'expérience"
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="Adresse")),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Ville"),
                ),
                (
                    "country",
                    models.CharField(
                        default="France", max_length=100, verbose_name="Pays"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Compte vérifié"),
                ),
                (
                    "newsletter_subscription",
                    models.BooleanField(
                        default=True, verbose_name="Abonnement newsletter"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisateur",
                "verbose_name_plural": "Utilisateurs",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, verbose_name="Biographie")),
                ("website", models.URLField(blank=True, verbose_name="Site web")),
                (
                    "instagram",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Instagram"
                    ),
                ),
                (
                    "facebook",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Facebook"
                    ),
                ),
                (
                    "youtube",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="YouTube"
                    ),
                ),
                (
                    "favorite_dance_style",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Style de danse préféré"
                    ),
                ),
                (
                    "preferred_partner_gender",
                    models.CharField(
                        choices=[
                            ("male", "Homme"),
                            ("female", "Femme"),
                            ("any", "Peu importe"),
                        ],
                        default="any",
                        max_length=20,
                        verbose_name="Genre de partenaire préféré",
                    ),
                ),
                (
                    "total_classes_attended",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Total des cours suivis"
                    ),
                ),
                (
                    "total_festivals_attended",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Total des festivals suivis"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Profil utilisateur",
                "verbose_name_plural": "Profils utilisateurs",
            },
        ),
    ]
