# Generated by Django 4.2.7 on 2025-08-13 10:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Training",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=200, unique=True, verbose_name="Slug"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "short_description",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Description courte"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("pending", "En attente de validation"),
                            ("approved", "Approuvé"),
                            ("rejected", "Rejeté"),
                            ("cancelled", "Annulé"),
                            ("ongoing", "En cours"),
                            ("completed", "Terminé"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Approuvé le"
                    ),
                ),
                (
                    "training_type",
                    models.CharField(
                        choices=[
                            ("practice", "Entraînement"),
                            ("social", "Danse sociale"),
                            ("workshop", "Atelier"),
                            ("choreography", "Chorégraphie"),
                            ("technique", "Technique"),
                            ("other", "Autre"),
                        ],
                        default="practice",
                        max_length=20,
                        verbose_name="Type d'entraînement",
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "Débutant"),
                            ("intermediate", "Intermédiaire"),
                            ("advanced", "Avancé"),
                            ("all_levels", "Tous niveaux"),
                        ],
                        default="all_levels",
                        max_length=20,
                        verbose_name="Niveau requis",
                    ),
                ),
                (
                    "max_participants",
                    models.PositiveIntegerField(
                        default=10,
                        validators=[
                            django.core.validators.MinValueValidator(2),
                            django.core.validators.MaxValueValidator(50),
                        ],
                        verbose_name="Nombre maximum de participants",
                    ),
                ),
                (
                    "current_participants",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Participants actuels"
                    ),
                ),
                (
                    "min_participants",
                    models.PositiveIntegerField(
                        default=2,
                        validators=[
                            django.core.validators.MinValueValidator(2),
                            django.core.validators.MaxValueValidator(20),
                        ],
                        verbose_name="Nombre minimum de participants",
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(verbose_name="Date et heure de début"),
                ),
                ("end_date", models.DateTimeField(verbose_name="Date et heure de fin")),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        default=60,
                        validators=[
                            django.core.validators.MinValueValidator(15),
                            django.core.validators.MaxValueValidator(480),
                        ],
                        verbose_name="Durée en minutes",
                    ),
                ),
                ("location", models.CharField(max_length=200, verbose_name="Lieu")),
                (
                    "address",
                    models.TextField(blank=True, verbose_name="Adresse complète"),
                ),
                ("city", models.CharField(max_length=100, verbose_name="Ville")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Code postal"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=8, verbose_name="Prix"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Devise"
                    ),
                ),
                ("is_free", models.BooleanField(default=True, verbose_name="Gratuit")),
                (
                    "content",
                    models.TextField(blank=True, verbose_name="Contenu détaillé"),
                ),
                ("objectives", models.TextField(blank=True, verbose_name="Objectifs")),
                (
                    "prerequisites",
                    models.TextField(blank=True, verbose_name="Prérequis"),
                ),
                (
                    "materials_needed",
                    models.TextField(blank=True, verbose_name="Matériel nécessaire"),
                ),
                (
                    "main_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="trainings/images/",
                        verbose_name="Image principale",
                    ),
                ),
                (
                    "gallery",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Galerie d'images"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, verbose_name="Tags"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_trainings",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Approuvé par",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_trainings",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Training",
                "verbose_name_plural": "Trainings",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="TrainingEnrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("confirmed", "Confirmé"),
                            ("cancelled", "Annulé"),
                            ("completed", "Terminé"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "enrolled_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Inscrit le"),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("paid", "Payé"),
                            ("failed", "Échoué"),
                            ("refunded", "Remboursé"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut du paiement",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Méthode de paiement"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_enrollments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Participant",
                    ),
                ),
                (
                    "training",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="trainings.training",
                        verbose_name="Training",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inscription au training",
                "verbose_name_plural": "Inscriptions aux trainings",
                "ordering": ["-enrolled_at"],
                "unique_together": {("training", "participant")},
            },
        ),
        migrations.AddIndex(
            model_name="training",
            index=models.Index(
                fields=["status", "start_date"], name="trainings_t_status_718595_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="training",
            index=models.Index(
                fields=["creator", "status"], name="trainings_t_creator_52c0d3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="training",
            index=models.Index(
                fields=["city", "start_date"], name="trainings_t_city_5154eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="training",
            index=models.Index(
                fields=["training_type", "difficulty"],
                name="trainings_t_trainin_f5c807_idx",
            ),
        ),
    ]
