# Generated by Django 4.2.7 on 2025-08-31 12:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("events", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("festivals", "0002_festival_instagram"),
        ("courses", "0002_course_instagram_course_website"),
    ]

    operations = [
        migrations.CreateModel(
            name="FormationArticle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "slug",
                    models.SlugField(max_length=200, unique=True, verbose_name="Slug"),
                ),
                ("content", models.TextField(verbose_name="Contenu HTML")),
                (
                    "excerpt",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="Extrait"
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("beginner", "Débutant"),
                            ("intermediate", "Intermédiaire"),
                            ("advanced", "Avancé"),
                        ],
                        default="beginner",
                        max_length=20,
                        verbose_name="Niveau",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("pending", "En attente de validation"),
                            ("published", "Publié"),
                            ("archived", "Archivé"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True, max_length=160, verbose_name="Description meta"
                    ),
                ),
                (
                    "featured_image",
                    models.ImageField(
                        blank=True,
                        upload_to="formations/images/",
                        verbose_name="Image à la une",
                    ),
                ),
                (
                    "reading_time",
                    models.PositiveIntegerField(
                        default=5, verbose_name="Temps de lecture (minutes)"
                    ),
                ),
                (
                    "views_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre de vues"
                    ),
                ),
                (
                    "likes_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre de likes"
                    ),
                ),
                (
                    "comments_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre de commentaires"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de publication"
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(default=1, verbose_name="Version"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Auteur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Article de formation",
                "verbose_name_plural": "Articles de formation",
                "ordering": ["-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FormationSearchLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "query",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Requête de recherche"
                    ),
                ),
                (
                    "results_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre de résultats"
                    ),
                ),
                (
                    "filters_applied",
                    models.JSONField(default=dict, verbose_name="Filtres appliqués"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Adresse IP"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de recherche"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de recherche de formation",
                "verbose_name_plural": "Logs de recherche de formation",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FormationMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="formations/media/", verbose_name="Fichier"
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("video", "Vidéo"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("archive", "Archive"),
                        ],
                        max_length=20,
                        verbose_name="Type de fichier",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Ordre d'affichage"
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Taille du fichier (bytes)"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Durée (secondes)"
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Dimensions (WxH)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_files",
                        to="formations.formationarticle",
                        verbose_name="Article",
                    ),
                ),
            ],
            options={
                "verbose_name": "Média de formation",
                "verbose_name_plural": "Médias de formation",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="FormationComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Contenu")),
                (
                    "is_approved",
                    models.BooleanField(default=False, verbose_name="Approuvé"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "moderated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de modération"
                    ),
                ),
                (
                    "moderation_notes",
                    models.TextField(blank=True, verbose_name="Notes de modération"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="formations.formationarticle",
                        verbose_name="Article",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Auteur",
                    ),
                ),
                (
                    "moderated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="moderated_comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Modéré par",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="formations.formationcomment",
                        verbose_name="Commentaire parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Commentaire de formation",
                "verbose_name_plural": "Commentaires de formation",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="FormationCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Ordre d'affichage"
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Icône (classe CSS)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="formations.formationcategory",
                        verbose_name="Catégorie parente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Catégorie de formation",
                "verbose_name_plural": "Catégories de formation",
                "ordering": ["order", "name"],
            },
        ),
        migrations.AddField(
            model_name="formationarticle",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="formations.formationcategory",
                verbose_name="Catégorie",
            ),
        ),
        migrations.AddField(
            model_name="formationarticle",
            name="previous_version",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="next_versions",
                to="formations.formationarticle",
                verbose_name="Version précédente",
            ),
        ),
        migrations.AddField(
            model_name="formationarticle",
            name="related_courses",
            field=models.ManyToManyField(
                blank=True, to="courses.course", verbose_name="Cours liés"
            ),
        ),
        migrations.AddField(
            model_name="formationarticle",
            name="related_events",
            field=models.ManyToManyField(
                blank=True, to="events.event", verbose_name="Événements liés"
            ),
        ),
        migrations.AddField(
            model_name="formationarticle",
            name="related_festivals",
            field=models.ManyToManyField(
                blank=True, to="festivals.festival", verbose_name="Festivals liés"
            ),
        ),
        migrations.CreateModel(
            name="FormationProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_started",
                    models.BooleanField(
                        default=False, verbose_name="Lecture commencée"
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="Lecture terminée"),
                ),
                (
                    "progress_percentage",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Pourcentage de progression",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de début"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de fin"
                    ),
                ),
                (
                    "last_read_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière lecture"
                    ),
                ),
                (
                    "total_reading_time",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Temps total de lecture (secondes)"
                    ),
                ),
                (
                    "personal_notes",
                    models.TextField(blank=True, verbose_name="Notes personnelles"),
                ),
                (
                    "difficulty_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Note de difficulté (1-5)",
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="formations.formationarticle",
                        verbose_name="Article",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Progression de formation",
                "verbose_name_plural": "Progressions de formation",
                "ordering": ["-last_read_at"],
                "unique_together": {("user", "article")},
            },
        ),
        migrations.CreateModel(
            name="FormationFavorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'ajout"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, verbose_name="Notes personnelles"),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="formations.formationarticle",
                        verbose_name="Article",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Favori de formation",
                "verbose_name_plural": "Favoris de formation",
                "ordering": ["-created_at"],
                "unique_together": {("user", "article")},
            },
        ),
    ]
