# Generated by Django 4.2.7 on 2025-08-13 10:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Festival",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=200, unique=True, verbose_name="Slug"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "short_description",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Description courte"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("pending", "En attente de validation"),
                            ("approved", "Approuvé"),
                            ("rejected", "Rejeté"),
                            ("cancelled", "Annulé"),
                            ("ongoing", "En cours"),
                            ("completed", "Terminé"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Approuvé le"
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(verbose_name="Date et heure de début"),
                ),
                ("end_date", models.DateTimeField(verbose_name="Date et heure de fin")),
                (
                    "registration_deadline",
                    models.DateTimeField(verbose_name="Date limite d'inscription"),
                ),
                ("location", models.CharField(max_length=200, verbose_name="Lieu")),
                (
                    "address",
                    models.TextField(blank=True, verbose_name="Adresse complète"),
                ),
                ("city", models.CharField(max_length=100, verbose_name="Ville")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Code postal"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="France", max_length=100, verbose_name="Pays"
                    ),
                ),
                (
                    "max_participants",
                    models.PositiveIntegerField(
                        default=100,
                        validators=[
                            django.core.validators.MinValueValidator(10),
                            django.core.validators.MaxValueValidator(10000),
                        ],
                        verbose_name="Nombre maximum de participants",
                    ),
                ),
                (
                    "current_participants",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Participants actuels"
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Prix de base"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Devise"
                    ),
                ),
                ("is_free", models.BooleanField(default=False, verbose_name="Gratuit")),
                (
                    "schedule",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Programme détaillé"
                    ),
                ),
                (
                    "workshops",
                    models.JSONField(blank=True, default=list, verbose_name="Ateliers"),
                ),
                (
                    "performances",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Spectacles"
                    ),
                ),
                (
                    "social_dances",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Danses sociales"
                    ),
                ),
                (
                    "main_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="festivals/images/",
                        verbose_name="Image principale",
                    ),
                ),
                (
                    "gallery",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Galerie d'images"
                    ),
                ),
                (
                    "promotional_video",
                    models.URLField(blank=True, verbose_name="Vidéo promotionnelle"),
                ),
                (
                    "accommodation_info",
                    models.TextField(
                        blank=True, verbose_name="Informations sur l'hébergement"
                    ),
                ),
                (
                    "transportation_info",
                    models.TextField(
                        blank=True, verbose_name="Informations sur le transport"
                    ),
                ),
                (
                    "food_info",
                    models.TextField(
                        blank=True, verbose_name="Informations sur la restauration"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, verbose_name="Tags"),
                ),
                ("website_url", models.URLField(blank=True, verbose_name="Site web")),
                (
                    "social_media",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Réseaux sociaux"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_festivals",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Approuvé par",
                    ),
                ),
                (
                    "artists",
                    models.ManyToManyField(
                        blank=True,
                        related_name="festival_appearances",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Artistes",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_festivals",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créateur",
                    ),
                ),
                (
                    "instructors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="festival_teaching",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Instructeurs",
                    ),
                ),
            ],
            options={
                "verbose_name": "Festival",
                "verbose_name_plural": "Festivals",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="FestivalEnrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("confirmed", "Confirmé"),
                            ("cancelled", "Annulé"),
                            ("completed", "Terminé"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "package",
                    models.CharField(
                        choices=[
                            ("basic", "Basique"),
                            ("standard", "Standard"),
                            ("premium", "Premium"),
                            ("vip", "VIP"),
                        ],
                        default="basic",
                        max_length=20,
                        verbose_name="Package",
                    ),
                ),
                (
                    "price_paid",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Prix payé"
                    ),
                ),
                (
                    "enrolled_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Inscrit le"),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("paid", "Payé"),
                            ("failed", "Échoué"),
                            ("refunded", "Remboursé"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut du paiement",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Méthode de paiement"
                    ),
                ),
                (
                    "special_requests",
                    models.TextField(blank=True, verbose_name="Demandes spéciales"),
                ),
                (
                    "dietary_restrictions",
                    models.TextField(
                        blank=True, verbose_name="Restrictions alimentaires"
                    ),
                ),
                (
                    "festival",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="festivals.festival",
                        verbose_name="Festival",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="festival_enrollments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Participant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inscription au festival",
                "verbose_name_plural": "Inscriptions aux festivals",
                "ordering": ["-enrolled_at"],
                "unique_together": {("festival", "participant")},
            },
        ),
        migrations.AddIndex(
            model_name="festival",
            index=models.Index(
                fields=["status", "start_date"], name="festivals_f_status_1f1bdf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="festival",
            index=models.Index(
                fields=["creator", "status"], name="festivals_f_creator_d7cb1c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="festival",
            index=models.Index(
                fields=["city", "start_date"], name="festivals_f_city_cf02fb_idx"
            ),
        ),
    ]
